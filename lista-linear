#include <stdio.h>
#include <stdlib.h>

typedef struct no{
    int chave;
    int valor;
    
}no;

no* L[10];
no*ptlista;

no* inicia_lista() {
    no* tmp = malloc(sizeof (no));
    tmp->chave = 0;
    tmp->valor = 0;

    return tmp;
}

void encerra_lista(){
    free(ptlista);
}

int busca1(int x) {
    L[10];
    int n = 10;
    
    int retorno = 0;
    int i = 1;
    while (i <= n) {
        if (L[i]->chave == x) {
            retorno = i;
            i = n + 1;
            return retorno;
        } else {
            i++;
        }
    }
}

int busca(int x){
    int n = 10;
    L[n+1]->chave = x;
    int i = 1;
    int retorno;
    
    while (L[i]->chave != x){
        i = i+1;
    }
    if (i!=n+1){
        retorno = i;
        return retorno;
    }
    else{
        retorno = 0;
        return retorno;
    }
    
}

int insere(no){
    L[10];
    int n = 0;
    int m = 10;
    int retorno;
    int r;
    r = busca(no->chave);
    
    if (n < m){
        if(r == 0){
            L[n+1] = no;
            n = n+1;
            retorno = n;
            return retorno;
        } 
        else{
            retorno = 0;
            return retorno;
        }
    }
    else{
        retorno = -1;
        return retorno;
    }
}   

int busca_ord(int x){
    int n = 2;
    L[n+1]->chave = x;
    int i = 1;
    while(L[i]->chave < x){
        i++;
    }
    if(i == n + 1 || L[i]->chave != x){
        return 0;
    }
    else{
        return i;
    }
}



int main(int argc, char** argv) {
    ptlista = inicia_lista();
    no p;
    p.chave= 1;
    p.valor = 7;
    
    printf ("valor a ser inserido: %d\n %d\n", 7, insere(p));
    printf("valor na posição %d:\n%d\n", 1 ,busca_ord(1));
    
    encerra_lista(ptlista);
    
    return (EXIT_SUCCESS);
}
